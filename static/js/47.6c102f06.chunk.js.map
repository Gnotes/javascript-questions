{"version":3,"sources":["q/139.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/47.6c102f06.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"139\" dangerouslySetInnerHTML = {{ __html: `\n<h6>142. 输出什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm a bird. 🦢\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Flamingo</span> <span class=\"token keyword keyword-extends\">extends</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'm pink. 🌸\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword keyword-super\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> pet <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Flamingo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>A: <code>I'm pink. 🌸</code></li>\n<li>B: <code>I'm pink. 🌸</code> <code>I'm a bird. 🦢</code></li>\n<li>C: <code>I'm a bird. 🦢</code> <code>I'm pink. 🌸</code></li>\n<li>D: Nothing, we didn't call any method</li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: B</h4>\n<p>我们创建了类 <code>Flamingo</code> 的实例 <code>pet</code>。当我们实例化这个实例，<code>Flamingo</code> 中的 <code>constructor</code> 被调用。首相，输出 <code>&quot;I'm pink. 🌸&quot;</code>, 之后我们调用<code>super()</code>。<code>super()</code> 调用父类的构造函数，<code>Bird</code>。<code>Bird</code> 的构造函数被调用，并输出 <code>&quot;I'm a bird. 🦢&quot;</code>。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}