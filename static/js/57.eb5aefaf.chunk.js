(this.webpackJsonpwebsite=this.webpackJsonpwebsite||[]).push([[57],{87:function(n,s,a){"use strict";a.r(s);var t=a(1);s.default=function(){return Object(t.jsx)("div",{className:"question","data-index":"148",dangerouslySetInnerHTML:{__html:'\n<h6>148. \u8f93\u51fa\u4ec0\u4e48?</h6>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword keyword-const">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>\n\temail<span class="token operator">:</span> <span class="token string">"e@mail.com"</span><span class="token punctuation">,</span>\n\tpassword<span class="token operator">:</span> <span class="token string">"12345"</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword keyword-const">const</span> <span class="token function-variable function">updateUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> email<span class="token punctuation">,</span> password <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword keyword-if">if</span> <span class="token punctuation">(</span>email<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\tObject<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> <span class="token punctuation">{</span> email <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token keyword keyword-if">if</span> <span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\tuser<span class="token punctuation">.</span>password <span class="token operator">=</span> password\n\t<span class="token punctuation">}</span>\n\n\t<span class="token keyword keyword-return">return</span> user\n<span class="token punctuation">}</span>\n\n<span class="token keyword keyword-const">const</span> updatedUser <span class="token operator">=</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> email<span class="token operator">:</span> <span class="token string">"new@email.com"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>updatedUser <span class="token operator">===</span> user<span class="token punctuation">)</span>\n</code></pre>\n<ul>\n<li>A: <code>false</code></li>\n<li>B: <code>true</code></li>\n<li>C: <code>TypeError</code></li>\n<li>D: <code>ReferenceError</code></li>\n</ul>\n<details><summary><b>\u7b54\u6848</b></summary>\n<p>\n<h4>\u7b54\u6848: B</h4>\n<p><code>updateUser</code> \u51fd\u6570\u66f4\u65b0user\u7684 <code>email</code> \u548c <code>password</code> \u5c5e\u6027\u7684\u503c\uff0c \u5982\u679c\u5b83\u4eec\u7684\u503c\u4f20\u5165\u51fd\u6570\uff0c \u51fd\u6570\u8fd4\u56de\u7684\u5c31\u662f <code>user</code> \u5bf9\u8c61\u3002 <code>updateUser</code> \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f <code>user</code> \u5bf9\u8c61\uff0c\u610f\u5473\u7740updatedUser\u7684\u503c\u4e0e <code>user</code> \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a <code>user</code> \u5bf9\u8c61\u3002<code>updatedUser === user</code> \u4e3a <code>true</code>.</p>\n</p>\n</details>\n'}})}}}]);