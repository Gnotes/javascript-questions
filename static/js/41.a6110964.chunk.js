(this.webpackJsonpwebsite=this.webpackJsonpwebsite||[]).push([[41],{71:function(n,s,a){"use strict";a.r(s);var o=a(2);s.default=function(){return Object(o.jsx)("div",{className:"question","data-index":"133",dangerouslySetInnerHTML:{__html:'\n<h6>133. \u8f93\u51fa\u4ec0\u4e48\uff1f</h6>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword keyword-const">const</span> myPromise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"Promise!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword keyword-function">function</span> <span class="token function">funcOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tmyPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Timeout!"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Last line!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword keyword-async">async</span> <span class="token keyword keyword-function">function</span> <span class="token function">funcTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token keyword keyword-const">const</span> res <span class="token operator">=</span> <span class="token keyword keyword-await">await</span> myPromise<span class="token punctuation">;</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword keyword-await">await</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Timeout!"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Last line!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">funcOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">funcTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<ul>\n<li>A: <code>Promise! Last line! Promise! Last line! Last line! Promise!</code></li>\n<li>B: <code>Last line! Timeout! Promise! Last line! Timeout! Promise!</code></li>\n<li>C: <code>Promise! Last line! Last line! Promise! Timeout! Timeout!</code></li>\n<li>D: <code>Last line! Promise! Promise! Last line! Timeout! Timeout!</code></li>\n</ul>\n<details><summary><b>\u7b54\u6848</b></summary>\n<p>\n<h4>\u7b54\u6848: D</h4>\n<p>\u9996\u5148\uff0c\u6211\u4eec\u8c03\u7528 <code>funcOne</code>\u3002\u5728\u51fd\u6570 <code>funcOne</code> \u7684\u7b2c\u4e00\u884c\uff0c\u6211\u4eec\u8c03\u7528<code>myPromise</code> promise <em>\u5f02\u6b65\u64cd\u4f5c</em>\u3002\u5f53JS\u5f15\u64ce\u5728\u5fd9\u4e8e\u6267\u884c promise\uff0c\u5b83\u7ee7\u7eed\u6267\u884c\u51fd\u6570 <code>funcOne</code>\u3002\u4e0b\u4e00\u884c <em>\u5f02\u6b65\u64cd\u4f5c</em> <code>setTimeout</code>\uff0c\u5176\u56de\u8c03\u51fd\u6570\u88ab Web API \u8c03\u7528\u3002 (\u8be6\u60c5\u8bf7\u53c2\u8003\u6211\u5173\u4e8eevent loop\u7684\u6587\u7ae0.)</p>\n<p>promise \u548c timeout \u90fd\u662f\u5f02\u6b65\u64cd\u4f5c\uff0c\u51fd\u6570\u7ee7\u7eed\u6267\u884c\u5f53JS\u5f15\u64ce\u5fd9\u4e8e\u6267\u884cpromise \u548c \u5904\u7406 <code>setTimeout</code> \u7684\u56de\u8c03\u3002\u76f8\u5f53\u4e8e <code>Last line!</code> \u9996\u5148\u88ab\u8f93\u51fa\uff0c \u56e0\u4e3a\u5b83\u4e0d\u662f\u5f02\u6b65\u64cd\u4f5c\u3002\u6267\u884c\u5b8c <code>funcOne</code> \u7684\u6700\u540e\u4e00\u884c\uff0cpromise \u72b6\u6001\u8f6c\u53d8\u4e3a resolved\uff0c<code>Promise!</code> \u88ab\u6253\u5370\u3002\u7136\u800c\uff0c\u56e0\u4e3a\u6211\u4eec\u8c03\u7528\u4e86 <code>funcTwo()</code>, \u8c03\u7528\u6808\u4e0d\u4e3a\u7a7a\uff0c<code>setTimeout</code> \u7684\u56de\u8c03\u4ecd\u4e0d\u80fd\u5165\u6808\u3002</p>\n<p>\u6211\u4eec\u73b0\u5728\u5904\u4e8e <code>funcTwo</code>\uff0c\u5148 <em>awaiting</em> myPromise\u3002\u901a\u8fc7 <code>await</code> \u5173\u952e\u5b57\uff0c \u6211\u4eec\u6682\u505c\u4e86\u51fd\u6570\u7684\u6267\u884c\u76f4\u5230 promise \u72b6\u6001\u53d8\u4e3a resolved (\u6216 rejected)\u3002\u7136\u540e\uff0c\u6211\u4eec\u8f93\u51fa <code>res</code> \u7684 awaited \u503c\uff08\u56e0\u4e3a promise \u672c\u8eab\u8fd4\u56de\u4e00\u4e2a promise\uff09\u3002 \u63a5\u7740\u8f93\u51fa <code>Promise!</code>\u3002</p>\n<p>\u4e0b\u4e00\u884c\u5c31\u662f <em>\u5f02\u6b65\u64cd\u4f5c</em> <code>setTimeout</code>\uff0c\u5176\u56de\u8c03\u51fd\u6570\u88ab Web API \u8c03\u7528\u3002</p>\n<p>\u6211\u4eec\u6267\u884c\u5230\u51fd\u6570 <code>funcTwo</code> \u7684\u6700\u540e\u4e00\u884c\uff0c\u8f93\u51fa <code>Last line!</code>\u3002\u73b0\u5728\uff0c\u56e0\u4e3a <code>funcTwo</code> \u51fa\u6808\uff0c\u8c03\u7528\u6808\u4e3a\u7a7a\u3002\u5728\u4e8b\u4ef6\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u56de\u8c03\u51fd\u6570\uff08<code>() =&gt; console.log(&quot;Timeout!&quot;)</code> from <code>funcOne</code>, and <code>() =&gt; console.log(&quot;Timeout!&quot;)</code> from <code>funcTwo</code>\uff09\u4ee5\u6b64\u5165\u6808\u3002\u7b2c\u4e00\u4e2a\u56de\u8c03\u8f93\u51fa <code>Timeout!</code>\uff0c\u5e76\u51fa\u6808\u3002\u7136\u540e\uff0c\u7b2c\u4e8c\u4e2a\u56de\u8c03\u8f93\u51fa <code>Timeout!</code>\uff0c\u5e76\u51fa\u6808\u3002\u5f97\u5230\u7ed3\u679c <code>Last line! Promise! Promise! Last line! Timeout! Timeout!</code></p>\n</p>\n</details>\n'}})}}}]);
//# sourceMappingURL=41.a6110964.chunk.js.map