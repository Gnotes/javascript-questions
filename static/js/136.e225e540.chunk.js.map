{"version":3,"sources":["q/82.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/136.e225e540.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"82\" dangerouslySetInnerHTML = {{ __html: `\n<h6>83. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Lydia\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">21</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-let\">let</span> city <span class=\"token operator\">=</span> person<span class=\"token punctuation\">.</span>city\ncity <span class=\"token operator\">=</span> <span class=\"token string\">\"Amsterdam\"</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>{ name: &quot;Lydia&quot;, age: 21 }</code></li>\n<li>B: <code>{ name: &quot;Lydia&quot;, age: 21, city: &quot;Amsterdam&quot; }</code></li>\n<li>C: <code>{ name: &quot;Lydia&quot;, age: 21, city: undefined }</code></li>\n<li>D: <code>&quot;Amsterdam&quot;</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: A</h4>\n<p>我们将变量<code>city</code>设置为等于<code>person</code>对象上名为<code>city</code>的属性的值。 这个对象上没有名为<code>city</code>的属性，因此变量<code>city</code>的值为<code>undefined</code>。</p>\n<p>请注意，我们没有引用<code>person</code>对象本身，只是将变量<code>city</code>设置为等于<code>person</code>对象上<code>city</code>属性的当前值。</p>\n<p>然后，我们将<code>city</code>设置为等于字符串<code>“Amsterdam”</code>。 这不会更改person对象：没有对该对象的引用。</p>\n<p>因此打印<code>person</code>对象时，会返回未修改的对象。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}