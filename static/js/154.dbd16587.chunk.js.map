{"version":3,"sources":["q/96.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/154.dbd16587.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"96\" dangerouslySetInnerHTML = {{ __html: `\n<h6>96. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Lydia\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nPerson <span class=\"token operator\">=</span> <span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">AnotherPerson</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Sarah\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> member <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>&quot;Lydia&quot;</code></li>\n<li>B: <code>&quot;Sarah&quot;</code></li>\n<li>C: <code>Error: cannot redeclare Person</code></li>\n<li>D: <code>SyntaxError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: B</h4>\n<p>我们可以将类设置为等于其他类/函数构造函数。 在这种情况下，我们将<code>Person</code>设置为<code>AnotherPerson</code>。 这个构造函数的名字是<code>Sarah</code>，所以新的<code>Person</code>实例<code>member</code>上的name属性是<code>Sarah</code>。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}