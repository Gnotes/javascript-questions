{"version":3,"sources":["q/33.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"uHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/85.81522242.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"33\" dangerouslySetInnerHTML = {{ __html: `\n<h6>33. 输出是什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'Lydia'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">\\`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">\\${</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">\\${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">\\`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>undefined is 21</code> <code>Lydia is 21</code></li>\n<li>B: <code>function</code> <code>function</code></li>\n<li>C: <code>Lydia is 21</code> <code>Lydia is 21</code></li>\n<li>D: <code>Lydia is 21</code> <code>function</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p>使用这两种方法，我们都可以传递我们希望 <code>this</code> 关键字引用的对象。但是，<code>.call</code> 是<strong>立即执行</strong>的。</p>\n<p><code>.bind</code> 返回函数的<strong>副本</strong>，但带有绑定上下文！它不是立即执行的。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}