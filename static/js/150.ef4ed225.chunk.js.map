{"version":3,"sources":["q/95.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/150.ef4ed225.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"95\" dangerouslySetInnerHTML = {{ __html: `\n<h6>97. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'b'</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>{Symbol('a'): 'b'}</code> and <code>[&quot;{Symbol('a')&quot;]</code></li>\n<li>B: <code>{}</code> and <code>[]</code></li>\n<li>C: <code>{ a: &quot;b&quot; }</code> and <code>[&quot;a&quot;]</code></li>\n<li>D: <code>{Symbol('a'): 'b'}</code> and <code>[]</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p><code>Symbol</code>类型是不可枚举的。<code>Object.keys</code>方法返回对象上的所有可枚举的键属性。<code>Symbol</code>类型是不可见的，并返回一个空数组。 记录整个对象时，所有属性都是可见的，甚至是不可枚举的属性。</p>\n<p>这是<code>Symbol</code>的众多特性之一：除了表示完全唯一的值（防止对象意外名称冲突，例如当使用2个想要向同一对象添加属性的库时），您还可以<code>隐藏</code>这种方式对象的属性（尽管不完全。你仍然可以使用<code>Object.getOwnPropertySymbols()</code>方法访问 <code>Symbol</code>。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}