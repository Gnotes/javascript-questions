{"version":3,"sources":["q/28.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"uHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/79.4470a72f.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"28\" dangerouslySetInnerHTML = {{ __html: `\n<h6>28. 输出是什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">giveLydiaPizza</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">'Just give Lydia pizza already!'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Lydia'</span>\n\nname<span class=\"token punctuation\">.</span><span class=\"token function\">giveLydiaPizza</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>&quot;Just give Lydia pizza already!&quot;</code></li>\n<li>B: <code>TypeError: not a function</code></li>\n<li>C: <code>SyntaxError</code></li>\n<li>D: <code>undefined</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: A</h4>\n<p><code>String</code> 是内置的构造函数，我们可以向它添加属性。我只是在它的原型中添加了一个方法。基本类型字符串被自动转换为字符串对象，由字符串原型函数生成。因此，所有 string(string 对象)都可以访问该方法！</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}