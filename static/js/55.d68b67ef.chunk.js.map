{"version":3,"sources":["q/146.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/55.d68b67ef.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"146\" dangerouslySetInnerHTML = {{ __html: `\n<h6>146. 输出是什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">getFruit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruits</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getFruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'🍊'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'🍌'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'🍍'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">getFruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">getFruit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'🍍'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'🍊'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'🍌'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>null</code>, <code>undefined</code>, 🍌</li>\n<li>B: <code>[]</code>, <code>null</code>, 🍌</li>\n<li>C: <code>[]</code>, <code>[]</code>, 🍌</li>\n<li>D: <code>undefined</code>, <code>undefined</code>, 🍌</li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p><code>?</code> 允许我们去选择性地访问对象内部更深层的嵌套属性。 我们尝试打印 <code>fruits</code> 数组索引值为 <code>1</code> 的子数组内部的索引值为 <code>1</code> 的元素。 如果在 <code>fruits</code> 数组索引值 为 <code>1</code> 的位置不存在元素，会直接返回 <code>undefined</code>。 如果 <code>fruits</code> 数组在索引值为 <code>1</code> 的位置存在元素，但是子数组在索引值为 <code>1</code> 的位置不存在元素，也会返回 <code>undefined</code>。</p>\n<p>首先，我们尝试打印 <code>[['🍊', '🍌'], ['🍍']]</code> 的子数组 <code>['🍍']</code> 的第2个元素。这个子数组只包含一个元素，也就意味着在索引值为 <code>1</code> 的位置不存在元素，所以返回的是 <code>undefined</code> 。</p>\n<p>其次，我们在没有传入任何参数调用了 <code>getFruits</code> 函数，也就意味着形参 <code>fruits</code> 的默认值为<code>undefined</code>。因为我们选择性地链接了 <code>fruits</code> 在索引值为 <code>1</code> 的元素，因为在索引值为 <code>1</code> 的位置不存在元素，因此返回的是 <code>undefined</code> 。</p>\n<p>最后，我们尝试打印 <code>['🍍'], ['🍊', '🍌']</code> 的子数组 <code>['🍊', '🍌']</code> 的第2个元素。子数组索引值为 <code>1</code>的位置为 <code>🍌</code> ，因此它被打印出了。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}