{"version":3,"sources":["q/152.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/62.c143496a.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"152\" dangerouslySetInnerHTML = {{ __html: `\n<h6>155. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-let\">let</span> randomValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"Lydia\"</span> <span class=\"token punctuation\">}</span>\nrandomValue <span class=\"token operator\">=</span> <span class=\"token number\">23</span>\n\n<span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword keyword-typeof\">typeof</span> randomValue <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"It's not a string!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Yay it's a string!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li>A: <code>It's not a string!</code></li>\n<li>B: <code>Yay it's a string!</code></li>\n<li>C: <code>TypeError</code></li>\n<li>D: <code>undefined</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: B</h4>\n<p><code>if</code> 语句的条件判断 <code>!typeof randomValue</code> 的值是否等于 <code>&quot;string&quot;</code>。 <code>!</code> 操作符将这个值转化为一个布尔值。如果值是truthy的话，返回值会是 <code>false</code>，如果值是falsy，返回值会是 <code>true</code>。在这里， <code>typeof randomValue</code> 的返回值是一个truthy值 <code>&quot;number&quot;</code>，意味着 <code>!typeof randomValue</code> 的值是一个布尔值 <code>false</code>。</p>\n<p><code>!typeof randomValue === &quot;string&quot;</code> 总是返回false，因为我们实际上是在执行 <code>false === &quot;string&quot;</code>。因为条件返回的是 <code>false</code>，所以 <code>else</code> 语句中的代码块会被运行，因此打印 <code>Yay it's a string!</code> 。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}