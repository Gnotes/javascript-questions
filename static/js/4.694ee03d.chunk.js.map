{"version":3,"sources":["q/10.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"qHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/4.694ee03d.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"10\" dangerouslySetInnerHTML = {{ __html: `\n<h6>10. 当我们这么做时，会发生什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Woof!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nbark<span class=\"token punctuation\">.</span>animal <span class=\"token operator\">=</span> <span class=\"token string\">'dog'</span>\n</code></pre>\n<ul>\n<li>A: 正常运行!</li>\n<li>B: <code>SyntaxError</code>. 你不能通过这种方式给函数增加属性。</li>\n<li>C: <code>undefined</code></li>\n<li>D: <code>ReferenceError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: A</h4>\n<p>这在 JavaScript 中是可以的，因为函数是对象！（除了基本类型之外其他都是对象）</p>\n<p>函数是一个特殊的对象。你写的这个代码其实不是一个实际的函数。函数是一个拥有属性的对象，并且属性也可被调用。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}