(this.webpackJsonpwebsite=this.webpackJsonpwebsite||[]).push([[61],{91:function(n,s,a){"use strict";a.r(s);var e=a(3);s.default=function(){return Object(e.jsx)("div",{className:"question","data-index":"151",dangerouslySetInnerHTML:{__html:'\n<h6>154. \u8f93\u51fa\u4ec0\u4e48?</h6>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword keyword-const">const</span> <span class="token function-variable function">createMember</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> email<span class="token punctuation">,</span> address <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword keyword-const">const</span> validEmail <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.+@.+..+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>\n\t<span class="token keyword keyword-if">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>validEmail<span class="token punctuation">)</span> <span class="token keyword keyword-throw">throw</span> <span class="token keyword keyword-new">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Valid email pls"</span><span class="token punctuation">)</span>\n\n\t<span class="token keyword keyword-return">return</span> <span class="token punctuation">{</span>\n\t\temail<span class="token punctuation">,</span>\n\t\taddress<span class="token operator">:</span> address <span class="token operator">?</span> address <span class="token operator">:</span> <span class="token keyword keyword-null">null</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword keyword-const">const</span> member <span class="token operator">=</span> <span class="token function">createMember</span><span class="token punctuation">(</span><span class="token punctuation">{</span> email<span class="token operator">:</span> <span class="token string">"my@email.com"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span>\n</code></pre>\n<ul>\n<li>A: <code>{ email: &quot;my@email.com&quot;, address: null }</code></li>\n<li>B: <code>{ email: &quot;my@email.com&quot; }</code></li>\n<li>C: <code>{ email: &quot;my@email.com&quot;, address: {} }</code></li>\n<li>D: <code>{ email: &quot;my@email.com&quot;, address: undefined }</code></li>\n</ul>\n<details><summary><b>\u7b54\u6848</b></summary>\n<p>\n<h4>\u7b54\u6848: C</h4>\n<p><code>address</code> \u7684\u9ed8\u8ba4\u503c\u662f\u4e00\u4e2a\u7a7a\u5bf9\u8c61 <code>{}</code>\u3002\u5f53\u6211\u4eec\u8bbe\u7f6e <code>member</code> \u53d8\u91cf\u4e3a <code>createMember</code> \u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u6ca1\u6709\u4e3aaddress\u53c2\u6570\u4f20\u503c\uff0c\u610f\u5473\u7740address\u7684\u503c\u4e3a\u9ed8\u8ba4\u7684\u7a7a\u5bf9\u8c61 <code>{}</code>\u3002\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u662f\u4e00\u4e2atruthy\u503c\uff0c\u610f\u5473\u7740 <code>address ? address : null</code> \u6761\u4ef6\u4f1a\u8fd4\u56de <code>true</code>\u3002address\u7684\u503c\u4e3a\u7a7a\u5bf9\u8c61 <code>{}</code>\u3002</p>\n</p>\n</details>\n'}})}}}]);
//# sourceMappingURL=61.f7aa3ba9.chunk.js.map