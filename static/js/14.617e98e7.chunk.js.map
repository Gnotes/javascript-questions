{"version":3,"sources":["q/109.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/14.617e98e7.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"109\" dangerouslySetInnerHTML = {{ __html: `\n<h6>112. 输出什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-function\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generatorOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-yield\">yield</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-function\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">generatorTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-yield\">yield</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> one <span class=\"token operator\">=</span> <span class=\"token function\">generatorOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-const\">const</span> two <span class=\"token operator\">=</span> <span class=\"token function\">generatorTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>a</code> and <code>a</code></li>\n<li>B: <code>a</code> and <code>undefined</code></li>\n<li>C: <code>['a', 'b', 'c']</code> and <code>a</code></li>\n<li>D: <code>a</code> and <code>['a', 'b', 'c']</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: C</h4>\n<p>通过 <code>yield</code> 关键字, 我们在 <code>Generator</code> 函数里执行<code>yield</code>表达式. 通过 <code>yield*</code> 关键字, 我们可以在一个<code>Generator</code> 函数里面执行（<code>yield</code>表达式）另一个 <code>Generator</code> 函数, 或可遍历的对象 (如数组).</p>\n<p>在函数 <code>generatorOne</code> 中, 我们通过 <code>yield</code> 关键字 yield 了一个完整的数组 <code>['a', 'b', 'c']</code>。函数<code>one</code>通过<code>next</code>方法返回的对象的<code>value</code> 属性的值 (<code>one.next().value</code>) 等价于数组 <code>['a', 'b', 'c']</code>.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['a', 'b', 'c']</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n</code></pre>\n<p>在函数 <code>generatorTwo</code> 中, 我们使用 <code>yield*</code> 关键字。就相当于函数<code>two</code>第一个<code>yield</code>的值, 等价于在迭代器中第一个 <code>yield</code> 的值。数组<code>['a', 'b', 'c']</code>就是这个迭代器. 第一个 <code>yield</code> 的值就是 <code>a</code>, 所以我们第一次调用 <code>two.next().value</code>时, 就返回<code>a</code>。</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'a'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'b'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'c'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n</code></pre>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}