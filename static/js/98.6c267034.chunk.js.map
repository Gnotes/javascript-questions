{"version":3,"sources":["q/45.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"uHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/98.6c267034.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"45\" dangerouslySetInnerHTML = {{ __html: `\n<h6>45. 返回值是什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> firstPromise <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> rej</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> secondPromise <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> rej</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>firstPromise<span class=\"token punctuation\">,</span> secondPromise<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>A: <code>&quot;one&quot;</code></li>\n<li>B: <code>&quot;two&quot;</code></li>\n<li>C: <code>&quot;two&quot; &quot;one&quot;</code></li>\n<li>D: <code>&quot;one&quot; &quot;two&quot;</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: B</h4>\n<p>当我们向<code>Promise.race</code>方法中传入多个<code>Promise</code>时，会进行 <em>优先</em> 解析。在这个例子中，我们用<code>setTimeout</code>给<code>firstPromise</code>和<code>secondPromise</code>分别设定了500ms和100ms的定时器。这意味着<code>secondPromise</code>会首先解析出字符串<code>two</code>。那么此时<code>res</code>参数即为<code>two</code>，是为输出结果。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}