{"version":3,"sources":["q/132.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/40.1978814f.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"132\" dangerouslySetInnerHTML = {{ __html: `\n<h6><a name=20191224></a>132. 输出什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> counterOne <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncounterOne<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncounterOne<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> counterTwo <span class=\"token operator\">=</span> counterOne<span class=\"token punctuation\">;</span>\ncounterTwo<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>counterOne<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>A: <code>0</code></li>\n<li>B: <code>1</code></li>\n<li>C: <code>2</code></li>\n<li>D: <code>3</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p><code>counterOne</code> 是类 <code>Counter</code> 的一个实例。类 Counter 包含一个<code>count</code> 属性在它的构造函数里， 和一个 <code>increment</code> 方法。首先，我们通过 <code>counterOne.increment()</code> 调用方法 <code>increment</code> 两次。现在, <code>counterOne.count</code> 为 <code>2</code>.</p>\n<img src=\"https://i.imgur.com/KxLlTm9.png\" width=\"400\">\n<p>然后，我们创建一个新的变量 <code>counterTwo</code> 并将 <code>counterOne</code> 的引用地址赋值给它。因为对象受引用地址的影响，我们刚刚创建了一个新的对象，其引用地址和 <code>counterOne</code> 的等价。因此它们指向同一块内存地址，任何对其的副作用都会影响 <code>counterTwo</code>。现在 <code>counterTwo.count</code> 为 <code>2</code>。</p>\n<p>我们调用 <code>counterTwo.increment()</code> 将 <code>count</code> 的值设为 <code>3</code>。然后，我们打印 <code>counterOne</code> 里的count，结果为 <code>3</code>。</p>\n<img src=\"https://i.imgur.com/BNBHXmc.png\" width=\"400\">\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}