{"version":3,"sources":["q/81.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/138.344a3eed.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"81\" dangerouslySetInnerHTML = {{ __html: `\n<h6>81. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">\\`</span><span class=\"token string\">Hi there, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">\\${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">\\`</span></span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>Hi there, </code></li>\n<li>B: <code>Hi there, undefined</code></li>\n<li>C: <code>Hi there, null</code></li>\n<li>D:  <code>ReferenceError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: B</h4>\n<p>默认情况下，如果不给函数传参，参数的值将为<code>undefined</code>。 上述情况，我们没有给参数<code>name</code>传值。 <code>name</code>等于<code>undefined</code>，并被打印。</p>\n<p>在ES6中，我们可以使用默认参数覆盖此默认的<code>undefined</code>值。 例如：</p>\n<p><code>function sayHi（name =“Lydia”）{...}</code></p>\n<p>在这种情况下，如果我们没有传递值或者如果我们传递<code>undefined</code>，<code>name</code>总是等于字符串<code>Lydia</code></p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}