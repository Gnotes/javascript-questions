{"version":3,"sources":["q/151.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/61.10fbfe83.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"151\" dangerouslySetInnerHTML = {{ __html: `\n<h6>151. 输出什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\temail<span class=\"token operator\">:</span> <span class=\"token string\">\"my@email.com\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function-variable function\">updateEmail</span><span class=\"token operator\">:</span> <span class=\"token parameter\">email</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> email\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">updateEmail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"new@email.com\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>my@email.com</code></li>\n<li>B: <code>new@email.com</code></li>\n<li>C: <code>undefined</code></li>\n<li>D: <code>ReferenceError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: A</h4>\n<p><code>updateEmail</code> 函数是一个箭头函数，它没有和 <code>user</code> 对象绑定。这就意味着 <code>this</code> 关键字不会引用到 <code>user</code> 对象，但是会引用到全局对象。 <code>user</code> 对象内部的 <code>email</code> 的值不会更新。当打印 <code>user.email</code> 的时候， 原始值 <code>my@email.com</code> 被返回。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}