{"version":3,"sources":["q/8.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,IAAIC,wBAA2B,CAAEC,OAAO","file":"static/js/136.c1d7a0f3.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"8\" dangerouslySetInnerHTML = {{ __html: `\n<h6>8. 输出是什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-class\">class</span> <span class=\"token class-name\">Chameleon</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-static\">static</span> <span class=\"token function\">colorChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>newColor <span class=\"token operator\">=</span> newColor\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>newColor\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> newColor <span class=\"token operator\">=</span> <span class=\"token string\">'green'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>newColor <span class=\"token operator\">=</span> newColor\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> freddie <span class=\"token operator\">=</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">Chameleon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> newColor<span class=\"token operator\">:</span> <span class=\"token string\">'purple'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nfreddie<span class=\"token punctuation\">.</span><span class=\"token function\">colorChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>orange</code></li>\n<li>B: <code>purple</code></li>\n<li>C: <code>green</code></li>\n<li>D: <code>TypeError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p><code>colorChange</code> 是一个静态方法。静态方法被设计为只能被创建它们的构造器使用（也就是 <code>Chameleon</code>），并且不能传递给实例。因为 <code>freddie</code> 是一个实例，静态方法不能被实例使用，因此抛出了 <code>TypeError</code> 错误。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}