{"version":3,"sources":["q/129.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/36.5c97f464.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"129\" dangerouslySetInnerHTML = {{ __html: `\n<h6>129. 输出什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> randomValue <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-typeof\">typeof</span> randomValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword keyword-const\">const</span> randomValue <span class=\"token operator\">=</span> <span class=\"token string\">\"Lydia Hallie\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>A: <code>&quot;number&quot;</code></li>\n<li>B: <code>&quot;string&quot;</code></li>\n<li>C: <code>undefined</code></li>\n<li>D: <code>ReferenceError</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: D</h4>\n<p>通过 <code>const</code> 关键字声明的变量在被初始化之前不可被引用：这被称之为 <em>暂时性死区</em>。在函数 <code>getInfo</code> 中, 变量 <code>randomValue</code> 声明在<code>getInfo</code> 的作用域的此法环境中。在想要对 <code>typeof randomValue</code> 进行log之前，变量 <code>randomValue</code> 仍未被初始化： 错误<code>ReferenceError</code> 被抛出! JS引擎并不会根据作用域链网上寻找该变量，因为我们已经在 <code>getInfo</code> 函数中声明了 <code>randomValue</code> 变量。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}