{"version":3,"sources":["q/71.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"wHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/127.8a6caf87.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"71\" dangerouslySetInnerHTML = {{ __html: `\n<h6>71. 如何能打印出<code>console.log</code>语句后注释掉的值？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-function\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">startGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-const\">const</span> 答案 <span class=\"token operator\">=</span> <span class=\"token keyword keyword-yield\">yield</span> <span class=\"token string\">\"Do you love JavaScript?\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>答案 <span class=\"token operator\">!==</span> <span class=\"token string\">\"Yes\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"Oh wow... Guess we're gone here\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword keyword-return\">return</span> <span class=\"token string\">\"JavaScript loves you back ❤️\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> game <span class=\"token operator\">=</span> <span class=\"token function\">startGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* 1 */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Do you love JavaScript?</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* 2 */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// JavaScript loves you back ❤️</span>\n</code></pre>\n<ul>\n<li>A: <code>game.next(&quot;Yes&quot;).value</code> and <code>game.next().value</code></li>\n<li>B: <code>game.next.value(&quot;Yes&quot;)</code> and <code>game.next.value()</code></li>\n<li>C: <code>game.next().value</code> and <code>game.next(&quot;Yes&quot;).value</code></li>\n<li>D: <code>game.next.value()</code> and <code>game.next.value(&quot;Yes&quot;)</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: C</h4>\n<p><code>generator</code>函数在遇到<code>yield</code>关键字时会“暂停”其执行。 首先，我们需要让函数产生字符串<code>Do you love JavaScript?</code>，这可以通过调用<code>game.next().value</code>来完成。上述函数的第一行就有一个<code>yield</code>关键字，那么运行立即停止了，<code>yield</code>表达式本身没有返回值，或者说总是返回<code>undefined</code>, 这意味着此时变量 <code>答案</code> 为<code>undefined</code></p>\n<p><code>next</code>方法可以带一个参数，该参数会被当作上一个 <code>yield</code> 表达式的返回值。当我们调用<code>game.next(&quot;Yes&quot;).value</code>时，先前的 <code>yield</code> 的返回值将被替换为传递给<code>next()</code>函数的参数<code>&quot;Yes&quot;</code>。此时变量 <code>答案</code> 被赋值为 <code>&quot;Yes&quot;</code>，<code>if</code>语句返回<code>false</code>，所以<code>JavaScript loves you back ❤️</code>被打印。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}