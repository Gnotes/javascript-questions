{"version":3,"sources":["q/49.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"uHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/99.b7baf0fe.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"49\" dangerouslySetInnerHTML = {{ __html: `\n<h6>50. 输出是什么?</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-typeof\">typeof</span> num <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword keyword-return\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-return\">return</span> num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>A: <code>[]</code></li>\n<li>B: <code>[null, null, null]</code></li>\n<li>C: <code>[undefined, undefined, undefined]</code></li>\n<li>D: <code>[ 3 x empty ]</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: C</h4>\n<p>对数组进行映射的时候,<code>num</code>就是当前循环到的元素. 在这个例子中，所有的映射都是number类型，所以if中的判断<code>typeof num === &quot;number&quot;</code>结果都是<code>true</code>.map函数创建了新数组并且将函数的返回值插入数组。</p>\n<p>但是，没有任何值返回。当函数没有返回任何值时，即默认返回<code>undefined</code>.对数组中的每一个元素来说，函数块都得到了这个返回值，所以结果中每一个元素都是<code>undefined</code>.</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}