{"version":3,"sources":["q/40.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"uHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,KAAKC,wBAA2B,CAAEC,OAAO","file":"static/js/93.d266ca07.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"40\" dangerouslySetInnerHTML = {{ __html: `\n<h6>40. 输出是什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-return\">return</span> acc<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>[0, 1, 2, 3, 1, 2]</code></li>\n<li>B: <code>[6, 1, 2]</code></li>\n<li>C: <code>[1, 2, 0, 1, 2, 3]</code></li>\n<li>D: <code>[1, 2, 6]</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: C</h4>\n<p><code>[1, 2]</code>是初始值。初始值将会作为首次调用时第一个参数 <code>acc</code> 的值。在第一次执行时， <code>acc</code> 的值是 <code>[1, 2]</code>， <code>cur</code> 的值是 <code>[0, 1]</code>。合并它们，结果为 <code>[1, 2, 0, 1]</code>。\n第二次执行， <code>acc</code> 的值是 <code>[1, 2, 0, 1]</code>， <code>cur</code> 的值是 <code>[2, 3]</code>。合并它们，最终结果为 <code>[1, 2, 0, 1, 2, 3]</code></p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}