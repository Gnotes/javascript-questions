{"version":3,"sources":["q/113.js"],"names":["className","data-index","dangerouslySetInnerHTML","__html"],"mappings":"sHAAe,qBACT,OACE,qBAAKA,UAAU,WAAWC,aAAW,MAAMC,wBAA2B,CAAEC,OAAO","file":"static/js/19.fcb89e89.chunk.js","sourcesContent":["export default ()=> {\n      return (\n        <div className=\"question\" data-index=\"113\" dangerouslySetInnerHTML = {{ __html: `\n<h6>116. 输出什么？</h6>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword keyword-const\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Lydia\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">21</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword keyword-const\">const</span> <span class=\"token function-variable function\">changeAge</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>person <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword keyword-const\">const</span> <span class=\"token function-variable function\">changeAgeAndName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>person <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token punctuation\">.</span>age <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  x<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Sarah\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">changeAge</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n<span class=\"token function\">changeAgeAndName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>A: <code>{name: &quot;Sarah&quot;, age: 22}</code></li>\n<li>B: <code>{name: &quot;Sarah&quot;, age: 23}</code></li>\n<li>C: <code>{name: &quot;Lydia&quot;, age: 22}</code></li>\n<li>D: <code>{name: &quot;Lydia&quot;, age: 23}</code></li>\n</ul>\n<details><summary><b>答案</b></summary>\n<p>\n<h4>答案: C</h4>\n<p>函数 <code>changeAge</code> 和函数 <code>changeAgeAndName</code> 有着不同的参数，定义一个 <em>新</em> 生成的对象 <code>{ ...person }</code>。这个对象有着所有 <code>person</code> 对象 中 k/v 值的副本。</p>\n<p>首项, 我们调用 <code>changeAge</code> 函数并传递 <code>person</code> 对象作为它的参数。这个函数对 <code>age</code> 属性进行加一操作。<code>person</code> 现在是 <code>{ name: &quot;Lydia&quot;, age: 22 }</code>。</p>\n<p>然后，我们调用函数 <code>changeAgeAndName</code> ，然而我们没有传递参数。取而代之，<code>x</code> 的值等价 <em>new</em> 生成的对象: <code>{ ...person }</code>。因为它是一个新生成的对象，它并不会对对象 <code>person</code> 造成任何副作用。<code>person</code> 仍然等价于 <code>{ name: &quot;Lydia&quot;, age: 22 }</code>。</p>\n</p>\n</details>\n` }}></div>\n      );\n    }"],"sourceRoot":""}